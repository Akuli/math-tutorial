# More Integrals

There are many fun and awesome things that can be done with integrals.
[Last time](integrals.html) we looked into calculating areas and 3D
volumes, but you'll be also amazed by everything else we can do.

redbox:
    Be sure to read [the derivative chapter](derivatives.html) and [the
    integral chapter](integrals.html) first. This chapter uses things I
    showed in those chapters.

## Arc Length

asymptote:
    size(6cm);
    draw(arc((0,0),1,0,180), blue);
    draw(arc((0,0),1,180,360), smalldashes);

    real angle = 0.7;
    draw((0,0)--(cos(angle),sin(angle)), L="3", align=SE);

The length of the blue arc in the above image is quite easy to calculate.
We can just complete it to a full circle, and we know [its perimeter
length is $3\tau$](summary.html#geometry-and-trig) so half of
that is $3\tau/2 \approx 9.42$. But that's just a special case. What if
we want to calculate the length of an arc taken from *any* $y=f(x)$ graph?

Let's assume that $f$ is a function that [has a
derivative](more-derivatives.html#which-functions-have-derivatives), and say
that the length of an arc to $x$ is $s(x)$, just like [we did with
areas](integrals.html#area-to-x). We get this:

asymptote:
    size(15cm);

    real a = -0.1, b = 1.2, the_x = 0.5, dx = 0.3;
    real f(real x) { return x**2/2 + 0.3; }

    pair dslabel=(0.5,1);
    label(dslabel, L="$s(x+\Delta x)-s(x)$", align=N);

    axises(a,b+0.3,a,f(b+0.3));
    draw(graph(f,a,b), blue, L=rotate(50)*Label("$y=f(x)$", position=Relative(0.75)), align=N);

    draw((the_x,0)--(the_x,f(the_x)), smalldashes);
    draw((the_x,f(the_x))--(the_x+dx,f(the_x)), smalldashes);
    draw((the_x+dx,0)--(the_x+dx,f(the_x+dx)), smalldashes);

    draw(brace((the_x+dx,-0.04),(the_x,-0.04), amplitude=0.1), L="$\Delta x$", align=S);
    draw(brace((the_x+dx,f(the_x+dx)),(the_x+dx,f(the_x)), amplitude=0.1),
         L="$f(x+\Delta x)-f(x)$", align=E);

    real xavg = the_x+dx/2;
    draw(brace((the_x,f(the_x)),(the_x+dx,f(the_x+dx)), amplitude=0.1));
    draw(dslabel--(xavg-0.07,f(xavg)+0.12), arrow=Arrow(size=5mm));
    label((the_x,0), L="$x$", align=SW);

Now you can see a little triangle in the picture so we can apply [the
Pythagorean theorem](geometry-and-trig.html#pythagorean-theorem), but as
usual, the result is not perfectly accurate because the graph is not
guaranteed to be straight. We get this mess:

math:
    (s(x+\Delta x)-s(x))^2 &\approx (\Delta x)^2 + (f(x+\Delta x)-f(x))^2 \\
    |s(x+\Delta x)-s(x)| &\approx \sqrt{(\Delta x)^2 + (f(x+\Delta x)-f(x))^2} \\
    &\approx \sqrt{(\Delta x)^2 + (\Delta x)^2 \frac{(f(x+\Delta x)-f(x))^2}{(\Delta x)^2}} \\
    &\approx \sqrt{(\Delta x)^2 + (\Delta x)^2 \left(\frac{f(x+\Delta x)-f(x)}{\Delta x}\right)^2} \\
    &\approx \sqrt{(\Delta x)^2 \left(1+\left(\frac{f(x+\Delta x)-f(x)}{\Delta x}\right)^2\right)} \\
    &\approx \sqrt{(\Delta x)^2}\ \sqrt{1+\left(\frac{f(x+\Delta x)-f(x)}{\Delta x}\right)^2} \\
    &\approx |\Delta x|\ \sqrt{1+\left(\frac{f(x+\Delta x)-f(x)}{\Delta x}\right)^2} \\
    \frac{|s(x+\Delta x)-s(x)|}{|\Delta x|} &\approx \sqrt{1+\left(\frac{f(x+\Delta x)-f(x)}{\Delta x}\right)^2} \\
    \frac{s(x+\Delta x)-s(x)}{\Delta x} &\approx \sqrt{1+\left(\frac{f(x+\Delta x)-f(x)}{\Delta x}\right)^2}

In the last step I assumed that we moved $x$ right so $\Delta x$ was
positive, and obviously the change of the arc length $s(x+\Delta x)-s(x)$
was also positive.

The smaller the bit of the curve we're looking at, the less curvy it is
and the more accurate this is:

math:
    \lim_{\Delta x\to0} \frac{s(x+\Delta x)-s(x)}{\Delta x}
    &= \lim_{\Delta x\to0} \sqrt{1+\left(\frac{f(x+\Delta x)-f(x)}{\Delta x}\right)^2} \\
    &= \sqrt{1+\left(\lim_{\Delta x\to0}\frac{f(x+\Delta x)-f(x)}{\Delta x}\right)^2} \\
    s'(x) &= \sqrt{1+(f'(x))^2}

asymptote: float:right;
    size(6cm);

    real a=3.5, b=6.5, xmin=2, xmax=8;
    axises(xmin,xmax+1,0,0);

    real f(real x) { return -sin(x)+2; }
    draw(graph(f, xmin, a));
    draw(graph(f, a, b), red, L="$s(b)-s(a)$", align=N);
    draw(graph(f, b, xmax));

    draw((a,0)--(a,f(a)), smalldashes);
    draw((b,0)--(b,f(b)), smalldashes);
    label((a,0), L="$a$", align=S);
    label((b,0), L="$b$", align=S);

<br>

math:
    s(b)-s(a) &= [s(x)]_a^b \\
    &= \int_a^b s'(x)\ dx \\
    &= \int_a^b \sqrt{1+(f'(x))^2}\ dx

That took a while, but we're done! This arc length thing is yet another
one of my favorite math stuff.

## Example: More Jumping

graybox: Problem
    A player jumps along the parabola $y=2x-x^2$. How long is the arc
    that the player's path traces above the x axis?

    asymptote:
        size(10cm);
        axises(-0.1,2.5,-0.1,1.5);
        real f(real x) {
            return 2*x-x**2;
        }
        draw(graph(f, -0.1, 2.1), blue, L="$y=2x-x^2$", align=N);

First things first -- let's figure out when the graph hits the $x$ axis;
that is, when $y=0$:

math:
    2x-x^2&=0 \\
    (2-x)x&=0 \\
    2-x=0\ \text{or}&\ x=0 \\
    x=2\ \text{or}&\ x=0

Now we can just plug in $a=0$, $b=2$ and $f(x)=2x-x^2$ to our formula.

math: f(x) &= 2x-x^2 \\ f'(x) &= 2-2x

math:
    & \int_a^b \sqrt{1 + (f'(x))^2}\ dx = \int_0^2 \sqrt{1+(2-2x)^2}\ dx
    \approx 2.96

Use your favorite symbolic calculation library for calculating the
integral. I couldn't do it by hand, but I got it done with
[sympy](http://www.sympy.org):

code: python3
    >>> from sympy import *
    >>> init_printing()
    >>> x = Symbol('x')
    >>> integrate(sqrt(1 + (2-2*x)**2), (x,0,2))
    asinh(2)
    ──────── + √5
       2
    >>> float(integrate(sqrt(1 + (2-2*x)**2), (x,0,2)))
    2.957885715089195

In cases like this I don't recommend worrying about what ``asinh`` is.
The important thing is that we can convert the answer to a float.

Calculating the precise value of the integral with sympy takes a while,
but it does it faster if we tell it to just evaluate the whole thing
with floats. The answer is not as precise, but the error is hardly
noticable.

code: python3
    >>> Integral(sqrt(1 + (2-2*x)**2), (x,0,2)).evalf()
    2.95788571508920

## Boring Trapezoid Area

This section has nothing to do with integrals, but we need it in the
next section. Let's find the area of shapes like this:

asymptote:
    size(8cm);
    real topw=3, bottomw=5, halfh=1;   // must be topw < bottomw
    real offset=0.7;
    real c = (topw+bottomw)/2;
    filldraw((-offset,-halfh)--(offset,halfh)--(offset+topw,halfh)--(-offset+bottomw,-halfh)--cycle, paleblue);
    draw((0,0)--(c,0), L="$c$", align=N);
    draw(brace((-offset+bottomw+0.1,halfh), (-offset+bottomw+0.1,-halfh)), L="$h$", align=E);
    draw(brace((2c/3,0), (2c/3,-halfh)), L="$\frac h 2$", align=E);

The line with length $c$ is centered between the topmost and the
bottommost line, and all horizontally drawn lines are parallel with each
other.

Let's cut off and rotate the ends:

asymptote:
    size(8cm);
    real topw=3, bottomw=5, halfh=1;   // must be topw < bottomw
    real offset=0.7;
    real c = (topw+bottomw)/2;
    filldraw((-offset,-halfh)--(offset,halfh)--(offset+topw,halfh)--(-offset+bottomw,-halfh)--cycle, paleblue);
    draw((0,0)--(c,0), smalldashes);
    draw((0,-halfh)--(0,0), red);
    draw((c,-halfh)--(c,0), red);

    draw(arc((0,0), 0.7, 210,80), arrow=Arrow(size=0.5cm));
    draw(arc((c,0), 0.7, -50,80), arrow=Arrow(size=0.5cm));

asymptote:
    size(8cm);
    real topw=3, bottomw=5, halfh=1;   // must be topw < bottomw
    real offset=0.7;
    real c = (topw+bottomw)/2;
    filldraw(box((0,-halfh),(c,halfh)), paleblue);
    draw((0,0)--(c,0), smalldashes, L="$c$", align=N);
    draw(brace((c+0.1,halfh), (c+0.1,-halfh)), L="$h$", align=E);
    draw((0,0)--(offset,halfh));
    draw((offset+topw,halfh)--(c,0));

The area is obviously just $ch$.

## My Thick Line Area Thing

I'm sure someone has invented this before me, but I haven't found a name
for this yet. That's why the title above is like it is.

Let's try to figure out how to calculate an area like this if we know
nothing but $t$ and $l$:

asymptote:
    size(10cm);
    real halft=0.4;
    path upper  = arc((-2,0),1-halft,-90,0)--arc((0,0),1+halft,180,0);
    path middle = arc((-2,0),1,-90,0)--arc((0,0),1,180,0);
    path lower  = arc((-2,0),1+halft,-90,0)--arc((0,0),1-halft,180,0);
    filldraw(upper--reverse(lower)--cycle, lightgray);
    draw(middle, heavyred, L=rotate(-15)*"$l$", align=W);

    draw(brace((-2.1,-1-halft),(-2.1,-1+halft)), L="$t$", align=W);
    draw(brace((1+halft,-0.1),(1-halft,-0.1)), L="$t$", align=S);

    real some_angle=2.1;
    pair P = (cos(some_angle),sin(some_angle));
    draw(brace(P,(P.x*(1-halft),P.y*(1-halft)),0.2), L="$t/2$", align=E);
    draw(brace((P.x*(1+halft),P.y*(1+halft)),P,0.2), L="$t/2$", align=E);

The area of a $t$ by $l$ rectangle is just $tl$. Let's see if it works
when things are curved like this. Note that the distance between the red
line and the black lines is always the same; calculating this would be
more difficult if the thickness wasn't the same $t$ everywhere.

asymptote:float:right;
    size(10cm);
    real halft=0.3, theta=0.7, thetamax=1.2, deltatheta=0.2;
    real leftw=sin(deltatheta)*(1-halft);
    real rightw=sin(deltatheta)*(1+halft);
    path basictrapezoid = (-halft,-leftw/2)--(-halft,leftw/2)--(halft,rightw/2)--(halft,-rightw/2)--cycle;

    fill(rarc((0,0),1+halft,theta-deltatheta/2,0)--
         rarc((0,0),1-halft,0,theta-deltatheta/2)--cycle, lightgray);
    draw(rarc((0,0),1+halft,thetamax,0)--rarc((0,0),1-halft,0,thetamax));
    draw(rarc((0,0),1,0,thetamax), heavyred);
    draw(shift(cos(theta),sin(theta))*rrotate(theta)*basictrapezoid, blue);
    draw(brace((1+halft,-0.05),(1-halft,-0.05)), L="$t$", align=S);
    label((cos(theta),sin(theta)), L=rrotate(theta-tau/4)*"$\Delta b$", align=NE);

    label((cos(theta/2)+halft/2,sin(theta/2)), L="$A(b)$");
    draw(brace((1,0),(cos(theta-deltatheta/2),sin(theta-deltatheta/2))), L="$b$", align=W);

Let's start by thinking about a small, trapezoid-shaped piece of the
area like in the image at right. Now everything is quite straight-forward
and a lot like in [the circle example](integrals.html#example-circle-area).

math:
    A(b+\Delta b)-A(b) &\approx t \cdot \Delta b \\
    \frac{A(b+\Delta b)-A(b)}{\Delta b} &\approx t \\
    \lim_{\Delta b\to0} \frac{A(b+\Delta b)-A(b)}{\Delta b} &= t \\
    A'(b) &= t \\
    A(b) &= tb+C

<br>

math:
    A(l)-A(0) &= (tl + C)-(t \cdot 0 + C) \\
    &= tl+C-0-C \\
    &= tl

## Example: Circle Area #2

graybox:
    This section assumes that you know what $\tau$ is. [Click
    here](summary.html#geometry-and-trig)
    if you don't.

So far we have [calculated a circle area with an
integral](integrals.html#example-circle-area), but now we can do it
without thinking about any integrals.

This thing's area is obviously $tl = t \tau R$:

asymptote:
    size(7cm);
    real big=1.6;
    real small = 2-big;
    filldraw(scale(big)*unitcircle, lightgray);
    filldraw(scale(small)*unitcircle, white);
    draw(unitcircle, heavyred, L="$l$");
    draw(brace((0,0),(1,0)), blue, L="$R$", align=N);

    draw((small,0)--(small,big), smalldashes);
    draw((big,0)--(big,big), smalldashes);
    draw(brace((small,big+0.1),(big,big+0.1), amplitude=0.4), L="$t$", align=N);

If we set $R=\frac t 2$, the inner circle's radius becomes 0:

asymptote:
    size(7cm);
    real big=2;
    real small = 2-big;
    filldraw(scale(big)*unitcircle, lightgray);
    filldraw(scale(small)*unitcircle, white);
    draw(unitcircle, heavyred, L="$l$");
    draw(brace((0,0),(1,0)), blue, L="$R$", align=N);

    draw((small,0)--(small,big), smalldashes);
    draw((big,0)--(big,big), smalldashes);
    draw(brace((small,big+0.1),(big,big+0.1), amplitude=0.4), L="$t$", align=N);

The area is $t \tau R = t \tau \frac t 2 = \frac 1 2 \tau t^2$.
