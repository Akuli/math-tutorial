# Exponent Functions and Logarithms

The above title sounds really boring, so I wonder how you ended up reading this
thing. The mathematician inside may might find some of this interesting though.

redbox:
    This chapter assumes that you know [derivatives](derivatives.html).

## Exponent Functions

The graph page contains some [exponent and logarithm
graphs](graphs.html#exponents-and-logarithms), but calculating values for
drawing them requires things like $a^{-1}$ if $x=-1$. Turns out that
$a^{-b}=\frac{1}{a^b}$. For example:

math:
    2^{-1} &= \frac{1}{2^1} = \frac 1 2 \\
    2^{-2} &= \frac{1}{2^2} = \frac 1 4 \\
    2^{-3} &= \frac{1}{2^3} = \frac 1 8

These results agree with the graphs.

## The e constant

Let's try to find the derivative of $a^x$ where $a$ is a constant:

math:
    \frac{d}{dx} a^x &= \lim_{h \to 0} \frac{a^{x+h}-a^x}{h} \\
    &= \lim_{h \to 0} \frac{a^x a^h - a^x \cdot 1}{h} \\
    &= \lim_{h \to 0} \frac{a^x(a^h-1)}{h} \\
    &= \lim_{h \to 0} \left(a^x \frac{a^h-1}{h}\right) \\
    &= a^x \cdot \lim_{h \to 0}\frac{a^h-1}{h} \\

Note that the only $x$ in what we ended up with is outside the lim, so the
entire lim thing is actually yet another constant. So, wouldn't it be handy if
the whole lim thing was just 1? Then $\frac{d}{dx} a^x$ would be just $a^x$.

Turns out that there's only one $a$ value that satisfies this, and
mathematicians call that number $e$.

math:
    \frac{d}{dx} e^x = e^x

math:
    e = \lim_{t\to0}\ (1+t)^{\frac 1 t}
    = \lim_{n\to\infty} \left(1 + \frac 1 n \right)^n

The $n$ thing is really same as the $t$ thing with $n=1/t$. So if $n$ approaches
infinity, $t=1/n$ approaches 0 because dividing by a big number results in a
small number.

Let's make sure that the $t$ thing works with the derivative thing. It doesn't
matter how $t$ and our $h$ relate to each other as long as they both to to 0, so
let's set $t=h$ and calculate the derivative:

math:
    \frac{d}{dx} e^x &= e^x \cdot \lim_{h \to 0}\frac{e^h-1}{h} \\
    &= e^x \cdot \lim_{h \to 0}\frac{\left((1 + h)^{\frac 1 h}\right)^h-1}{h} \\
    &= e^x \cdot \lim_{h \to 0}\frac{(1 + h)^{\frac 1 h h}-1}{h} \\
    &= e^x \cdot \lim_{h \to 0}\frac{(1 + h)^1-1}{h} \\
    &= e^x \cdot \lim_{h \to 0}\frac{1+h-1}{h} \\
    &= e^x \cdot \lim_{h \to 0}\frac h h \\
    &= e^x \cdot 1 \\

Let's also calculate an approximate value of $e$ and check the answer:

code: python3
    >>> n = 10000000000
    >>> (1 + (1/n))**n
    2.7182820532347876
    >>> import math
    >>> math.e
    2.718281828459045

I think this is quite nice. We got this magic $2.718...$ number out of pretty
much nowhere. You'll be amazed by all the places where it occurs.

Many programming languages have an ``exp(x)`` function that returns $e^x$, and
it's usually more precise than e.g. ``pow(e, x)`` or ``e**x``, although the
difference is hardly noticable:

code: python3
    >>> math.exp(3)
    20.085536923187668
    >>> math.e**3
    20.085536923187664

graybox: See Also
    [This video](https://youtu.be/AuA2EAgAegE) contains a different kind of
    introduction to $e$ with more facts but less details.

## Logarithms

A logarithm is the inverse of an exponent. If $y=b^x$, then $x = \log_b(y)$. You
can also think of logarithms like $\log_b(b^x) = x$ and $b^{\log_b(x)} = x$. The
$b$ is known as the base of the logarithm.

The inversiness looks like this in graphs:

asymptote:
    size(12cm);
    real xymin=-3, expmax=3;
    real exp2(real x) { return 2**x; }
    real log2(real x) { return log(x)/log(2); }
    grid(xymin,exp2(expmax),xymin,exp2(expmax));
    axises(xymin,exp2(expmax),xymin,exp2(expmax));
    label((1,0), L="1", align=S);
    label((0,1), L="1", align=NW);
    draw(graph(exp2,xymin,expmax), blue, L=rotate(55)*"$y=2^x$", align=NW);
    draw(graph(log2,exp2(xymin),exp2(expmax)), heavyred,
         L=rotate(22)*"$y=\log_2(x)$", align=SE);

Note that the $\log_2$ graph does not exist in the $x<0$ area because $2^x>0$
with any $x$. You cannot take any logarithm of a zero or a negative value.

The base $e$ logarithm $\log_e(x)$ is often written as $\ln(x)$. The n is short
for "natural", and $\log_e$ is called natural because it appears surprisingly
often in all kinds of places because of the $e$.

Many programming languages and calculators have a ``log(x)`` function, and
usually it returns $\ln(x)$, $\log_2(x)$ or $\log_{10}(x)$. If you aren't sure
which logarithm it is, you can try it like this:

math:
    \log_b(b) = \log_b(b^1) = 1

code: python3
    >>> import math
    >>> math.log(2)
    0.6931471805599453
    >>> math.log(10)
    2.302585092994046
    >>> math.log(math.e)
    1.0

Python's ``math.log(x)`` seems to return $\ln(x)$.

The summary page contains [a bunch of formulas](summary.html#logs-are-useful)
that make logarithms very useful. This tutorial doesn't contain proofs of them
yet, but I'll probably add the proofs soon.

For example, if you have something like $a^b=c$ and $a$ is known to be positive,
you also know that $c$ is positive (look at [the
graphs](graphs.html#exponents-and-logarithms)) and you can take a logarithm on
either side:

math:
    a^b &= c \\
    \ln(a^b) &= \ln c \\
    b \ln(a) &= \ln c

Of course, you can take any logarithm you want instead of $\ln$.

Use the $\log_b(x) = \displaystyle\frac{\log_a(x)}{\log_a(b)}$ formula if your
programming language doesn't have a logarithm that returns what you want:

code: javascript
    function log4(x) {
        // this works with any logarithm, so i don't even need to care about
        // which logarithm Math.log is in javascript
        return Math.log(x) / Math.log(4);
    }

Most programming languages have a few different logarithm functions like e.g.
``log2`` and ``log10``, and some allow specifying a base like ``math.log(x, 4)``
in Python.
